name: go-queue_push

on:
  push:
    # branches:
    #   - main
    paths:
      - "./"
      - ".github/workflows/go-queue_push.yml"

env:
  LINTER_VERSION: "v1.51.2"
  GO_VERSION: "1.19"

jobs:
  environment:
    runs-on: ubuntu-latest
    env:
      GITHUB_SHA: ${{ github.sha }}
      GITHUB_REF: ${{ github.ref }}
    steps:
      - name: Get git source
        run: |
          git_source=`echo $GITHUB_REF | sed 's/refs\/heads\///'`
          git_source=`echo $git_source | sed 's/refs\/tags\///'`
          git_source=`echo $git_source | sed 's/refs\\///'`
          echo $git_source
          echo "git_source=$git_source" >> $GITHUB_ENV
      - name: Get git SHA
        run: |
          git_sha=`echo $GITHUB_SHA`
          echo $git_sha
          echo "git_sha=$git_sha" >> $GITHUB_ENV
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Get version
        run: |
          version_source=`cat /home/runner/work/go-queue/go-queue/version.json | jq '.Version' | sed 's/"//g'`
          echo $version_source
          echo "version_source=$version_source" >> $GITHUB_ENV
      - name: Generate build artifacts
        run: |
          mkdir -p /tmp
          echo ${{ env.version_source }} >> /tmp/version_source
          echo ${{ env.git_source }} >> /tmp/git_source
          echo ${{ env.git_sha }} >> /tmp/git_sha
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            /tmp/version_source
            /tmp/git_source
            /tmp/git_sha

  go_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.LINTER_VERSION }}
          working-directory: .
          args: --verbose

  go_test:
    needs: [go_lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Test go-queue/finite
        continue-on-error: true
        run: |
          cd /home/runner/work/go-queue/go-queue/finite
          go mod download
          go test -v ./... -coverprofile /tmp/go-queue-finite.out > /tmp/go-queue-finite.log
      - name: Test go-queue/infinite
        continue-on-error: true
        run: |
          cd /home/runner/work/go-queue/go-queue/infinite
          go mod download
          go test -v ./... -coverprofile /tmp/go-queue-infinite.out > /tmp/go-queue-infinite.log
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            /tmp/go-queue-finite.log
            /tmp/go-queue-infinite.log
            /tmp/go-queue-finite.out
            /tmp/go-queue-infinite.out
          retention-days: 1

  git_push_tag:
    needs: [go_test, environment]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: /tmp
      - name: Get version
        run: |
          version=`cat /tmp/version_source`
          echo "version=$version" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      # - name: Push/Update go-queue version
      #   uses: anothrNick/github-tag-action@1.36.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     WITH_V: true
      #     CUSTOM_TAG: v${{ env.version }}
